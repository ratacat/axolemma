#!/usr/bin/env node
const log = require('loglevel')
const cli = require('commander')
const inquirer = require('inquirer')
const semver = require('semver')
const {Subject, Observable} = require('rxjs')
const {bold, green, blue, red} = require('chalk')

log.setLevel('info')

if (semver.lt(process.version,'8.0.0')) {
  console.log(red(`Axolemma supports Node ${bold('v8.0.0')} or higher.`))
  console.log(red(`You are currently using ${bold(process.version)}.`))
  return process.exit(1)
}

const {version} = require('../package.json')

const ax = require('../')
const {isAlphanumeric} = require('./validation')

cli.version('0.1.0')
cli.on('--help', () => {
  console.log(blue(`Type ${bold(green('axolemma'))} to start creating.`))
})

const prompts = new Subject()

// https://github.com/SBoudrias/Inquirer.js/blob/master/examples/rx-observable-array.js

inquirer.prompt(prompts).ui.process.subscribe(
  onEach,
  onError, function(answers){
  log.debug({answers})
  ax.generate(answers) // Eventually this will be done during the prompts, and user will be prompted to approve of the generated map.
})

function onEach() { log.debug('onEach', arguments) }
function onError() {
  log.error('An error has occurred:', arguments)
  throw arguments[0] || 'Mystery error!'
}

prompts.next(Observable.pairs({
  type: 'input',
  name: 'areaTitle',
  message: blue('What would you like to title this area?'),
  validate: isAlphanumeric,
}))

prompts.next(Observable.pairs({
  type: 'confirm',
  name: 'customizeAreaInfo',
  message: blue('Would you like to further customize the area\'s manifest information?')
}))

prompts.complete()

log.debug(prompts)