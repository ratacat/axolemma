#!/usr/bin/env node
const log = require('loglevel')
const cli = require('commander')
const inquirer = require('inquirer')
const semver = require('semver')
const requiresNode = require('requires-node-version')
const {Subject, Observable} = require('rxjs/Rx')
const {bold, green, blue, red} = require('chalk')

requiresNode('8.0.0')

// Obtain maximum information, for now.
log.setLevel('info')


const {version} = require('../package.json')

const ax = require('../')
const {isAlphanumeric} = require('./validation')

cli.version('0.1.0')
cli.on('--help', () => {
  console.log(blue(`Type ${bold(green('axolemma'))} to start creating.`))
})

// Set up initial questions
// https://github.com/SBoudrias/Inquirer.js/blob/master/examples/rx-observable-array.js

const questions = Observable.from([
  {
    type: 'input',
    name: 'areaTitle',
    message: blue('What would you like to title this area?'),
    validate: isAlphanumeric,
  },
  {
    type: 'confirm',
    name: 'customizeAreaInfo',
    message: blue('Would you like to further customize the area\'s manifest information?')
  }
])

const prompts = new Subject()

const { ui } = inquirer.prompt(prompts);
console.log({ui});
ui.process
  .subscribe(
    onEach,
    onError,
    (answers) => {
      console.log({answers})
      ax.generate(answers) // Eventually this will be done during the prompts, and user will be prompted to approve of the generated map.
      prompts.complete()
    }
  )

function onEach() { console.log('onEach', arguments) }
function onError() {
  console.error('An error has occurred:', arguments)
  throw arguments[0] || 'Mystery error!'
}

console.log({prompts, questions})

prompts.next(questions)
